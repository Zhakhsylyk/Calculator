package com.example.calculator

import android.annotation.SuppressLint
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.EditText
import java.math.BigDecimal
import java.math.RoundingMode
import android.widget.TextView
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        btn_add.setOnClickListener(){
            add()
        }
        btn_sub.setOnClickListener(){
        sub()
        }
        btn_prod.setOnClickListener(){
            prod()
        }
        btn_div.setOnClickListener(){
            div()
        }
    }

    @SuppressLint("SetTextI18n")
    fun add(){
        if (inputIsNotEmpty()){
            val input1 = num1.text.toString().trim().toBigDecimal()
            val input2 = num2.text.toString().trim().toBigDecimal()
            result.text = input1.add(input2).toString()
        }
    }
    @SuppressLint("SetTextI18n")
    fun sub(){
        if (inputIsNotEmpty()){
            val input1 = num1.text.toString().trim().toBigDecimal()
            val input2 = num2.text.toString().trim().toBigDecimal()
            result.text = input1.subtract(input2).toString()
        }
    }
    @SuppressLint("SetTextI18n")
    fun prod(){
        if (inputIsNotEmpty()){
            val input1 = num1.text.toString().trim().toBigDecimal()
            val input2 = num2.text.toString().trim().toBigDecimal()
            result.text = input1.multiply(input2).toString()
        }
    }
    @SuppressLint("SetTextI18n")
    fun div(){
        if (inputIsNotEmpty()){
            val input1 = num1.text.toString().trim().toBigDecimal()
            val input2 = num2.text.toString().trim().toBigDecimal()
            if(input2.compareTo(BigDecimal.ZERO) == 0){
                num2.error = "Invalid input"
            }else {
                result.text = input1.divide(input2, 2, RoundingMode.HALF_UP).toString()
            }
        }
    }


    fun inputIsNotEmpty() :Boolean{
        var b = true
        if(num1.text.toString().trim().isEmpty()){
            num1.error = "Required"
            b = false
        }
        if (num2.text.toString().trim().isEmpty()){
            num2.error = "Required"
            b = false
        }
        return b
    }
}
